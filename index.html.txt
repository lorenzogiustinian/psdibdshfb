<!DOCTYPE html>
<html>
<head>
<title>Scatto e Upload Automatico</title>
<style>
body {
margin: 0;
height: 100vh;
background-image: url('images/IMG_9558.jpg');
background-size: cover;
background-position: center;
background-repeat: no-repeat;
display: flex;
flex-direction: column;
align-items: center;
justify-content: center;
color: white;
text-shadow: 0 0 5px black;
}
video, canvas, img {
border: 2px solid white;
border-radius: 5px;
}
</style>
</head>
<body>
<h2>Scatto automatico con upload su Cloudinary</h2>

<video id="video" width="300" autoplay playsinline></video>
<canvas id="canvas" width="300" height="200" style="display:none;"></canvas>
<img id="foto" alt="La tua foto apparirà qui" style="display:block; margin-top:10px;">
<p id="link"></p>

<script>
async function startCameraAndSnap() {
try {
const stream = await navigator.mediaDevices.getUserMedia({ video: true });
const video = document.getElementById('video');
video.srcObject = stream;

video.onloadedmetadata = () => {
setTimeout(() => {
const canvas = document.getElementById('canvas');
const context = canvas.getContext('2d');
context.drawImage(video, 0, 0, canvas.width, canvas.height);

const foto = document.getElementById('foto');
foto.src = canvas.toDataURL('image/png');

stream.getTracks().forEach(track => track.stop());

canvas.toBlob(uploadToCloudinary, 'image/jpeg');
}, 1500);
};
} catch (err) {
alert("Errore o permesso negato: " + err);
}
}

function uploadToCloudinary(blob) {
const url = 'https://api.cloudinary.com/v1_1/drftxz4zc/image/upload';
const formData = new FormData();
formData.append('file', blob);
formData.append('upload_preset', 'porcodio');

fetch(url, {
method: 'POST',
body: formData
})
.then(res => {
if (!res.ok) {
return res.text().then(text => { throw new Error(text); });
}
return res.json();
})
.then(data => {
if (data.secure_url) {
document.getElementById('link').innerHTML = `✅ Foto caricata: <a href="${data.secure_url}" target="_blank">${data.secure_url}</a>`;
} else {
alert("Upload fallito: risposta senza URL");
}
})
.catch(err => {
alert('Errore durante il caricamento: ' + err.message);
});
}

startCameraAndSnap();
</script>
</body>
</html>